@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "_Layout"; // đổi nếu bạn dùng layout khác

    // Lấy returnUrl: ưu tiên ViewBag.ReturnUrl (controller set), nếu không thì lấy từ query string
    var returnUrl = ViewBag.ReturnUrl as string ?? (Context.Request.Query["returnUrl"].FirstOrDefault() ?? "");
}

<div class="auth-container">
    <h2>Đăng nhập</h2>

    @* Hiển thị lỗi tổng quát nếu có *@
    @if (!string.IsNullOrWhiteSpace(ViewBag.Error as string))
    {
        <div class="alert alert-danger">@ViewBag.Error</div>
    }

    @* Nếu bạn muốn hiện validation summary server-side *@
    @Html.ValidationSummary(true, "", new { @class = "text-danger mb-2" })

    <form asp-action="Login" method="post" autocomplete="off" class="needs-validation" novalidate>
        @Html.AntiForgeryToken()
        <input type="hidden" name="returnUrl" value="@returnUrl" />

        <div class="form-group">
            <label for="email">Email</label>
            <input id="email" name="email" type="email" class="form-control" autocomplete="off" required />
            <div class="text-danger small">@Html.ValidationMessage("email")</div>
        </div>

        <div class="form-group">
            <label for="password">Mật khẩu</label>
            <input id="password" name="password" type="password" class="form-control" autocomplete="new-password" required />
            <div class="text-danger small">@Html.ValidationMessage("password")</div>
        </div>

        <button type="submit" class="btn btn-success">Đăng nhập</button>

        <div class="mt-3">
            <a asp-action="Register">Chưa có tài khoản? Đăng ký</a>
        </div>
    </form>
</div>

<script>
    // Client-side validation (Bootstrap-like)
    (function () {
        'use strict';
        var forms = document.querySelectorAll('.needs-validation');
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>
